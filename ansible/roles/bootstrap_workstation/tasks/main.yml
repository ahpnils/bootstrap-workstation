---
# tasks file for bootstrap_workstation

- name: "Install mandatory packages for role execution"
  tags:
    - packages
  ansible.builtin.package:
    name: "{{ ws_dep_pkg_list }}"
    state: present

- name: "Install RPMFusion repositories packages"
  tags:
    - packages
  ansible.builtin.dnf:
    name:
      - "https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
      - "https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
    disable_gpg_check: true
    state: present

- name: "Add hashicorp repo"
  ansible.builtin.yum_repository:
    name: "hashicorp"
    description: "Hashicorp Stable - $basearch"
    file: "/etc/yum.repos.d/hashicorp.repo"
    baseurl: "https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable"
    gpgkey: "https://rpm.releases.hashicorp.com/gpg"
    gpgcheck: true
    enabled: true

- name: "Add google-cloud-cli repo"
  ansible.builtin.yum_repository:
    name: "google-cloud-cli"
    description: "Google Cloud CLI"
    file: "/etc/yum.repos.d/google-cloud-sdk.repo"
    baseurl: "https://packages.cloud.google.com/yum/repos/cloud-sdk-el8-x86_64"
    gpgkey:
      - "https://packages.cloud.google.com/yum/doc/yum-key.gpg"
      - "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
    gpgcheck: true
    enabled: true

- name: "Add glow Copr repository"
  community.general.copr:
    host: "copr.fedorainfracloud.org"
    state: enabled
    name: "keefle/glow"

- name: "Install some basic packages"
  tags:
    - packages
  ansible.builtin.package:
    name: "{{ ws_pkg_list }}"
    state: present

- name: "Install packages from RPMFusion"
  tags:
    - packages
  ansible.builtin.package:
    name: "{{ ws_fusion_pkg_list }}"
    state: present

- name: "Install packages from misc repositories"
  tags:
    - packages
  ansible.builtin.package:
    name: "{{ ws_misc_pkg_list }}"
    state: present

- name: "Add the flathub remote from the system installation"
  community.general.flatpak_remote:
    name: flathub
    state: present

- name: "Install more software with flatpack"
  tags:
    - packages
    - flatpak
  community.general.flatpak:
    name: "{{ ws_pak_list }}"
    state: present


- name: Register Bash path
  tags:
    - users
  ansible.builtin.shell: PATH=/bin:/sbin:$PATH command -v bash
  register: bash_path
  ignore_errors: true
  become: false
  changed_when: false

- name: "Create basic users groups"
  tags:
    - users
  ansible.builtin.group:
    name: "{{ item.name }}"
    gid: "{{ item.uid }}"
    state: present
  with_items: "{{ ws_users }}"

- name: "Create basic users"
  tags:
    - users
  ansible.builtin.user:
    name: "{{ item.name }}"
    group: "{{ item.name }}"
    groups: wheel
    uid: "{{ item.uid }}"
    shell: "{{ bash_path.stdout }}"
    state: present
    home: "/home/{{ item.name }}"
    comment: "{{ item.comment }}"
    create_home: true
  with_items: "{{ ws_users }}"

- name: "Copy sudo configuration"
  tags:
    - users
    - sudo
  ansible.builtin.copy:
    src: "files/sudoers_d_nils"
    dest: "/etc/sudoers.d/nils"
    owner: "root"
    group: "root"
    mode: "0644"

- name: "Create users' directory structure"
  tags:
    - users
  ansible.builtin.file:
    path: "/home/{{ item.0.name }}/{{ item.1 }}"
    state: directory
    mode: 0700
    owner: "{{ item.0.name }}"
    group: "{{ item.0.name }}"
    force: true
    recurse: true
  loop: "{{ ws_users | product(ws_directory_structure) | list }}"

- name: "Check if dotfiles are already present"
  tags:
    - users
    - git
  ansible.builtin.stat:
    path: /home/nils/git/github/ahpnils/dotfiles
  register: dotfiles_present

- name: "Clone dotfiles git repository"
  tags:
    - users
    - git
  become_user: "nils"
  when: not dotfiles_present.stat.exists
  ansible.builtin.git:
    repo: "https://github.com/ahpnils/dotfiles.git"
    dest: "/home/nils/git/github/ahpnils/dotfiles/"
    clone: true
    update: true
    umask: "0022"
    force: true

- name: "Check if Vundle plugins are already installed"
  tags:
    - users
    - git
  ansible.builtin.stat:
    path: /home/nils/git/github/others/Vundle.vim
  register: vundle_present

- name: "Execute dotfiles' Makefile"
  become_user: "nils"
  community.general.make:
    chdir: "/home/nils/git/github/ahpnils/dotfiles"
    target: install

- name: "Execute dotfiles' Makefile for Vim stuff"
  become_user: "nils"
  when: not vundle_present.stat.exists
  community.general.make:
    chdir: "/home/nils/git/github/ahpnils/dotfiles"
    target: vim-deps

- name: "Download Firefox Developer Edition"
  tags:
    - software
  become_user: "nils"
  ansible.builtin.get_url:
    url: "https://download.mozilla.org/?product=firefox-devedition-latest-ssl&os=linux64&lang=en-US"
    dest: "/home/nils/tmp/firefox.tar.bz2"
    mode: "0600"

  # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/unarchive_module.html
- name: "Extract Firefox Developer Edition"
  tags:
    - software
  become_user: "nils"
  ansible.builtin.unarchive:
    src: "/home/nils/tmp/firefox.tar.bz2"
    dest: "/home/nils/bin/"

- name: "Copy Firefox Developer Edition .desktop file"
  tags:
    - software
  ansible.builtin.copy:
    src: "files/firefox-dev.desktop"
    dest: "/home/nils/.local/share/applications/firefox-dev.desktop"
    owner: "nils"
    group: "nils"
    mode: "0644"

- name: "Copy wallpaper file"
  tags:
    - gnome
  ansible.builtin.copy:
    src: "files/wallpaper_sheep.png"
    dest: "/home/nils/Pictures/Wallpapers/wallpaper_sheep.png"
    owner: "nils"
    group: "nils"
    mode: "0644"

- name: "Copy avatar file"
  tags:
    - gnome
  ansible.builtin.copy:
    src: "files/avatar_sheep.png"
    dest: "/home/nils/Pictures/Avatars/avatar_sheep.png"
    owner: "nils"
    group: "nils"
    mode: "0644"

- name: "Set GNOME wallpaper"
  tags:
    - gnome
  become_user: "nils"
  community.general.dconf:
    key: "/org/gnome/desktop/background/picture-uri"
    value: "'file:///home/nils/Pictures/Wallpapers/wallpaper_sheep.png'"

- name: "Set lock screen background"
  tags:
    - gnome
  become_user: "nils"
  community.general.dconf:
    key: "/org/gnome/desktop/screensaver/picture-uri"
    value: "'file:///home/nils/Pictures/Wallpapers/wallpaper_sheep.png'"

  # gnome-screenshot must be installed for this to work
- name: "Set screenshots location"
  tags:
    - gnome
  become_user: "nils"
  ansible.builtin.command: "gsettings set org.gnome.gnome-screenshot auto-save-directory '/home/nils/Pictures/Screenshots'"
  changed_when: false

    # gsettings get org.gnome.shell favorite-apps
    # ['com.gexperts.Tilix.desktop', 'org.keepassxc.KeePassXC.desktop', 'firefox.desktop', 'firefox-dev.desktop', 'mozilla-thunderbird.desktop', 'com.discordapp.Discord.desktop', 'org.signal.Signal.desktop', 'io.github.Hexchat.desktop', 'org.telegram.desktop.desktop', 'virt-manager.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Settings.desktop', 'org.gnome.tweaks.desktop', 'com.obsproject.Studio.desktop', 'com.spotify.Client.desktop']

# vim:ts=2:sw=2
